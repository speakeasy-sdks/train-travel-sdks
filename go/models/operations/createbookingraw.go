// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"traintravel/models/components"
)

// CreateBookingRawBookingsResponseBody - Booking successful
type CreateBookingRawBookingsResponseBody struct {
	// Unique identifier for the booking
	ID *string
	// Identifier of the booked trip
	TripID *string
	// Name of the passenger
	PassengerName *string
	// Indicates whether the passenger has a bicycle.
	HasBicycle *bool
	// Indicates whether the passenger has a dog.
	HasDog *bool
	Links  *components.LinksSelf
}

func (o *CreateBookingRawBookingsResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateBookingRawBookingsResponseBody) GetTripID() *string {
	if o == nil {
		return nil
	}
	return o.TripID
}

func (o *CreateBookingRawBookingsResponseBody) GetPassengerName() *string {
	if o == nil {
		return nil
	}
	return o.PassengerName
}

func (o *CreateBookingRawBookingsResponseBody) GetHasBicycle() *bool {
	if o == nil {
		return nil
	}
	return o.HasBicycle
}

func (o *CreateBookingRawBookingsResponseBody) GetHasDog() *bool {
	if o == nil {
		return nil
	}
	return o.HasDog
}

func (o *CreateBookingRawBookingsResponseBody) GetLinks() *components.LinksSelf {
	if o == nil {
		return nil
	}
	return o.Links
}

// CreateBookingRawResponseBody - Booking successful
type CreateBookingRawResponseBody struct {
	// Unique identifier for the booking
	ID *string `json:"id,omitempty"`
	// Identifier of the booked trip
	TripID *string `json:"trip_id,omitempty"`
	// Name of the passenger
	PassengerName *string `json:"passenger_name,omitempty"`
	// Indicates whether the passenger has a bicycle.
	HasBicycle *bool `json:"has_bicycle,omitempty"`
	// Indicates whether the passenger has a dog.
	HasDog *bool                 `json:"has_dog,omitempty"`
	Links  *components.LinksSelf `json:"links,omitempty"`
}

func (o *CreateBookingRawResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *CreateBookingRawResponseBody) GetTripID() *string {
	if o == nil {
		return nil
	}
	return o.TripID
}

func (o *CreateBookingRawResponseBody) GetPassengerName() *string {
	if o == nil {
		return nil
	}
	return o.PassengerName
}

func (o *CreateBookingRawResponseBody) GetHasBicycle() *bool {
	if o == nil {
		return nil
	}
	return o.HasBicycle
}

func (o *CreateBookingRawResponseBody) GetHasDog() *bool {
	if o == nil {
		return nil
	}
	return o.HasDog
}

func (o *CreateBookingRawResponseBody) GetLinks() *components.LinksSelf {
	if o == nil {
		return nil
	}
	return o.Links
}

type CreateBookingRawResponse struct {
	HTTPMeta components.HTTPMetadata
	// Booking successful
	TwoHundredAndOneApplicationJSONObject *CreateBookingRawResponseBody
	Body                                  []byte
	Headers                               map[string][]string
}

func (o *CreateBookingRawResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateBookingRawResponse) GetTwoHundredAndOneApplicationJSONObject() *CreateBookingRawResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredAndOneApplicationJSONObject
}

func (o *CreateBookingRawResponse) GetBody() []byte {
	if o == nil {
		return nil
	}
	return o.Body
}

func (o *CreateBookingRawResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
