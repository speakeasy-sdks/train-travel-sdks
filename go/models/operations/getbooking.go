// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"traintravel/models/components"
)

type GetBookingRequest struct {
	// The ID of the booking to retrieve.
	BookingID string `pathParam:"style=simple,explode=false,name=bookingId"`
}

func (o *GetBookingRequest) GetBookingID() string {
	if o == nil {
		return ""
	}
	return o.BookingID
}

// GetBookingBookingsResponseBody - The booking details
type GetBookingBookingsResponseBody struct {
	// Unique identifier for the booking
	ID *string
	// Identifier of the booked trip
	TripID *string
	// Name of the passenger
	PassengerName *string
	// Indicates whether the passenger has a bicycle.
	HasBicycle *bool
	// Indicates whether the passenger has a dog.
	HasDog *bool
	Links  *components.LinksSelf
}

func (o *GetBookingBookingsResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetBookingBookingsResponseBody) GetTripID() *string {
	if o == nil {
		return nil
	}
	return o.TripID
}

func (o *GetBookingBookingsResponseBody) GetPassengerName() *string {
	if o == nil {
		return nil
	}
	return o.PassengerName
}

func (o *GetBookingBookingsResponseBody) GetHasBicycle() *bool {
	if o == nil {
		return nil
	}
	return o.HasBicycle
}

func (o *GetBookingBookingsResponseBody) GetHasDog() *bool {
	if o == nil {
		return nil
	}
	return o.HasDog
}

func (o *GetBookingBookingsResponseBody) GetLinks() *components.LinksSelf {
	if o == nil {
		return nil
	}
	return o.Links
}

// GetBookingResponseBody - The booking details
type GetBookingResponseBody struct {
	// Unique identifier for the booking
	ID *string `json:"id,omitempty"`
	// Identifier of the booked trip
	TripID *string `json:"trip_id,omitempty"`
	// Name of the passenger
	PassengerName *string `json:"passenger_name,omitempty"`
	// Indicates whether the passenger has a bicycle.
	HasBicycle *bool `json:"has_bicycle,omitempty"`
	// Indicates whether the passenger has a dog.
	HasDog *bool                 `json:"has_dog,omitempty"`
	Links  *components.LinksSelf `json:"links,omitempty"`
}

func (o *GetBookingResponseBody) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *GetBookingResponseBody) GetTripID() *string {
	if o == nil {
		return nil
	}
	return o.TripID
}

func (o *GetBookingResponseBody) GetPassengerName() *string {
	if o == nil {
		return nil
	}
	return o.PassengerName
}

func (o *GetBookingResponseBody) GetHasBicycle() *bool {
	if o == nil {
		return nil
	}
	return o.HasBicycle
}

func (o *GetBookingResponseBody) GetHasDog() *bool {
	if o == nil {
		return nil
	}
	return o.HasDog
}

func (o *GetBookingResponseBody) GetLinks() *components.LinksSelf {
	if o == nil {
		return nil
	}
	return o.Links
}

type GetBookingResponse struct {
	HTTPMeta components.HTTPMetadata
	// The booking details
	TwoHundredApplicationJSONObject *GetBookingResponseBody
	Body                            []byte
	Headers                         map[string][]string
}

func (o *GetBookingResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetBookingResponse) GetTwoHundredApplicationJSONObject() *GetBookingResponseBody {
	if o == nil {
		return nil
	}
	return o.TwoHundredApplicationJSONObject
}

func (o *GetBookingResponse) GetBody() []byte {
	if o == nil {
		return nil
	}
	return o.Body
}

func (o *GetBookingResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
