/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type Station = {
    /**
     * Unique identifier for the station.
     */
    id: string;
    /**
     * The name of the station
     */
    name: string;
    /**
     * The address of the station.
     */
    address: string;
    /**
     * The country code of the station.
     */
    countryCode: string;
    /**
     * The timezone of the station in the [IANA Time Zone Database format](https://www.iana.org/time-zones).
     */
    timezone?: string | undefined;
};

/** @internal */
export namespace Station$ {
    export type Inbound = {
        id: string;
        name: string;
        address: string;
        country_code: string;
        timezone?: string | undefined;
    };

    export const inboundSchema: z.ZodType<Station, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
            name: z.string(),
            address: z.string(),
            country_code: z.string(),
            timezone: z.string().optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                address: v.address,
                countryCode: v.country_code,
                ...(v.timezone === undefined ? null : { timezone: v.timezone }),
            };
        });

    export type Outbound = {
        id: string;
        name: string;
        address: string;
        country_code: string;
        timezone?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Station> = z
        .object({
            id: z.string(),
            name: z.string(),
            address: z.string(),
            countryCode: z.string(),
            timezone: z.string().optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                address: v.address,
                country_code: v.countryCode,
                ...(v.timezone === undefined ? null : { timezone: v.timezone }),
            };
        });
}
