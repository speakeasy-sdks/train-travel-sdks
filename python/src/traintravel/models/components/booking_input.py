"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from traintravel import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BookingInput:
    trip_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trip_id'), 'exclude': lambda f: f is None }})
    r"""Identifier of the booked trip"""
    passenger_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('passenger_name'), 'exclude': lambda f: f is None }})
    r"""Name of the passenger"""
    has_bicycle: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('has_bicycle'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the passenger has a bicycle."""
    has_dog: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('has_dog'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the passenger has a dog."""
    

